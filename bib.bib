@String{cgforum = "Computer Graphics Forum"}
@String{tog = "ACM TOG"}


@inproceedings{Appa2015RayCF,
  title={Ray Casting for 3d Rendering – a Review},
  author={Sadakthullah Appa},
  year={2015}
}

@ARTICLE{511,
  author={Levoy, M.},
  journal={IEEE Computer Graphics and Applications}, 
  title={Display of surfaces from volume data}, 
  year={1988},
  volume={8},
  number={3},
  pages={29-37},
  doi={10.1109/38.511}}

@article{10.1145/78964.78965,
author = {Levoy, Marc},
title = {Efficient Ray Tracing of Volume Data},
year = {1990},
issue_date = {July 1990},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {9},
number = {3},
issn = {0730-0301},
url = {https://doi.org/10.1145/78964.78965},
doi = {10.1145/78964.78965},
abstract = {Volume rendering is a technique for visualizing sampled scalar or vector fields of three spatial dimensions without fitting geometric primitives to the data. A subset of these techniques generates images by computing 2-D projections of a colored semitransparent volume, where the color and opacity at each point are derived from the data using local operators. Since all voxels participate in the generation of each image, rendering time grows linearly with the size of the dataset. This paper presents a front-to-back image-order volume-rendering algorithm and discusses two techniques for improving its performance. The first technique employs a pyramid of binary volumes to encode spatial coherence present in the data, and the second technique uses an opacity threshold to adaptively terminate ray tracing. Although the actual time saved depends on the data, speedups of an order of magnitude have been observed for datasets of useful size and complexity. Examples from two applications are given: medical imaging and molecular graphics.},
journal = {ACM Trans. Graph.},
month = {jul},
pages = {245–261},
numpages = {17}
}



@article{10.1145/964965.808594,
author = {Kajiya, James T. and Von Herzen, Brian P},
title = {Ray Tracing Volume Densities},
year = {1984},
issue_date = {July 1984},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {18},
number = {3},
issn = {0097-8930},
url = {https://doi.org/10.1145/964965.808594},
doi = {10.1145/964965.808594},
abstract = {This paper presents new algorithms to trace objects represented by densities within a volume grid, e.g. clouds, fog, flames, dust, particle systems. We develop the light scattering equations, discuss previous methods of solution, and present a new approximate solution to the full three-dimensional radiative scattering problem suitable for use in computer graphics. Additionally we review dynamical models for clouds used to make an animated movie.},
journal = {SIGGRAPH Comput. Graph.},
month = {jan},
pages = {165–174},
numpages = {10},
keywords = {Simulation of natural phenomena, Radiative transport, Ray tracing, Clouds, Particle systems, Raster graphics, Stochastic modeling, Light scattering, Computer graphics}
}

@inproceedings{10.1145/147130.147155,
author = {Danskin, John and Hanrahan, Pat},
title = {Fast Algorithms for Volume Ray Tracing},
year = {1992},
isbn = {0897915275},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/147130.147155},
doi = {10.1145/147130.147155},
booktitle = {Proceedings of the 1992 Workshop on Volume Visualization},
pages = {91–98},
numpages = {8},
location = {Boston, Massachusetts, USA},
series = {VVS '92}
}




@article{10.1145/97880.97886,
author = {Arvo, James and Kirk, David},
title = {Particle Transport and Image Synthesis},
year = {1990},
issue_date = {Aug. 1990},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {24},
number = {4},
issn = {0097-8930},
url = {https://doi.org/10.1145/97880.97886},
doi = {10.1145/97880.97886},
abstract = {The rendering equation is similar to the linear Boltzmann equation which has been widely studied in physics and nuclear engineering. Consequently, many of the powerful techniques which have been developed in these fields can be applied to problems in image synthesis. In this paper we adapt several statistical techniques commonly used in neutron transport to stochastic ray tracing and, more generally, to Monte Carlo solution of the rendering equation. First, we describe a technique known as Russian roulette which can be used to terminate the recursive tracing of rays without introducing statistical bias. We also examine the practice of creating ray trees in classical ray tracing in the light of a well-known technique in particle transport known as splitting. We show that neither ray trees nor paths as described in [10] constitute an optimal sampling plan in themselves and that a hybrid may be more efficient.},
journal = {SIGGRAPH Comput. Graph.},
month = {sep},
pages = {63–66},
numpages = {4}
}

@INPROCEEDINGS{729595,
  author={Wittenbrink, C.M. and Malzbender, T. and Goss, M.E.},
  booktitle={IEEE Symposium on Volume Visualization (Cat. No.989EX300)}, 
  title={Opacity-weighted color interpolation for volume sampling}, 
  year={1998},
  volume={},
  number={},
  pages={135-142},
  doi={10.1109/SVV.1998.729595}}



@article{10.1145/378456.378484,
author = {Drebin, Robert A. and Carpenter, Loren and Hanrahan, Pat},
title = {Volume Rendering},
year = {1988},
issue_date = {Aug. 1988},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {22},
number = {4},
issn = {0097-8930},
url = {https://doi.org/10.1145/378456.378484},
doi = {10.1145/378456.378484},
abstract = {A technique for rendering images of volumes containing mixtures of materials is presented. The shading model allows both the interior of a material and the boundary between materials to be colored. Image projection is performed by simulating the absorption of light along the ray path to the eye. The algorithms used are designed to avoid artifacts caused by aliasing and quantization and can be efficiently implemented on an image computer. Images from a variety of applications are shown.},
journal = {SIGGRAPH Comput. Graph.},
month = {jun},
pages = {65–74},
numpages = {10},
keywords = {medical imaging, non-destructive evaluation (NDE), scientific visualization, computer tomography, image processing, magnetic resonance imaging (MRI)}
}


@article{Sabella1988ARA,
  title={A rendering algorithm for visualizing 3D scalar fields},
  author={Paolo Sabella},
  journal={Proceedings of the 15th annual conference on Computer graphics and interactive techniques},
  year={1988}
}

@article{Upson1988VbufferVV,
  title={V-buffer: visible volume rendering},
  author={Craig Upson and Michael Keeler},
  journal={Proceedings of the 15th annual conference on Computer graphics and interactive techniques},
  year={1988}
}

@article{10.1145/325165.325247,
author = {Perlin, Ken},
title = {An Image Synthesizer},
year = {1985},
issue_date = {Jul. 1985},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {19},
number = {3},
issn = {0097-8930},
url = {https://doi.org/10.1145/325165.325247},
doi = {10.1145/325165.325247},
abstract = {We introduce the concept of a Pixel Stream Editor. This forms the basis for an interactive synthesizer for designing highly realistic Computer Generated Imagery. The designer works in an interactive Very High Level programming environment which provides a very fast concept/implement/view iteration cycle.Naturalistic visual complexity is built up by composition of non-linear functions, as opposed to the more conventional texture mapping or growth model algorithms. Powerful primitives are included for creating controlled stochastic effects. We introduce the concept of "solid texture" to the field of CGI.We have used this system to create very convincing representations of clouds, fire, water, stars, marble, wood, rock, soap films and crystal. The algorithms created with this paradigm are generally extremely fast, highly realistic, and asynchronously parallelizable at the pixel level.},
journal = {SIGGRAPH Comput. Graph.},
month = {jul},
pages = {287–296},
numpages = {10},
keywords = {algorithm development, fire, turbulence, space function, stochastic modelling, pixel stream editor, waves, solid texture, functional composition, interactive}
}

@misc{haggstrom2018real,
  title={Real-time rendering of volumetric clouds},
  author={H{\"a}ggstr{\"o}m, Fredrik},
  year={2018}
}